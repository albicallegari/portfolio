{"version":3,"file":"static/js/84.50bc52c7.chunk.js","mappings":"oMAOA,EAJuB,SAAH,GAAsE,IAAhEA,EAAG,EAAHA,IAAKC,EAAM,EAANA,OAAQC,EAAS,EAATA,UACrC,OAAO,SAAC,IAAI,CAACF,IAAKA,GAAO,GAAIC,OAAQA,GAAU,IAAIE,EAAAA,OAAO,CAAEC,IAAKC,EAAAA,IAAAA,QAAaC,UAAWC,EAAAA,UAAAA,YAAwBC,WAAYN,GAC/H,E,wHCwBA,EAvB6B,SAAH,GAEqB,IAD7CO,EAAK,EAALA,MAEA,OACE,gCACa,SAAVA,IACC,SAAC,EAAc,CACbT,IAAKU,EACLR,UAAU,WACVD,OAAQ,IAAIE,EAAAA,OAAO,CAAEC,IAAKC,EAAAA,IAAAA,QAAaC,UAAWC,EAAAA,UAAAA,WAG3C,UAAVE,IACC,SAAC,EAAc,CACbT,IAAKW,EACLT,UAAU,WACVD,OAAQ,IAAIE,EAAAA,OAAO,CAAEC,IAAKC,EAAAA,IAAAA,QAAaC,UAAWC,EAAAA,UAAAA,aAK5D,E,+EC+DA,EA/Ea,WACX,IAAMK,GAAoBC,EAAAA,EAAAA,GAAc,gCACxC,GAA8CC,EAAAA,EAAAA,KAC5C,SAACC,GAAgB,OAAKA,EAAMC,OAAO,IADtBC,EAAU,EAAjBR,MAAmBS,EAAc,EAAdA,eAGrBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAmBjB,OAbAC,EAAAA,EAAAA,YAAU,WAENJ,EADEP,GACOY,EAAAA,EAAAA,IAAS,SACJA,EAAAA,EAAAA,IAAS,UANzBC,YAAW,kBAAMN,GAASO,EAAAA,EAAAA,KAAkB,GAAM,GAAE,KAQtD,GAAG,KAEHH,EAAAA,EAAAA,YAAU,WAENJ,EADEP,GACOY,EAAAA,EAAAA,IAAS,SACJA,EAAAA,EAAAA,IAAS,SAC3B,GAAG,CAACZ,KAGF,UAACe,EAAA,EAAG,CAACC,UAAU,OAAM,WACjBV,IACA,gBAAKU,UAAU,eAAc,UAC3B,iBAAKA,UAAU,yBAAwB,WACrC,iBAAKA,UAAU,2BAA0B,WACvC,qBACA,qBACA,wBAEF,wBAAI,kBAIV,UAACD,EAAA,EAAG,CAACC,UAAU,iBAAgB,WAC7B,SAAC,EAAoB,CAACnB,MAAOQ,KAC7B,SAACY,EAAA,EAAM,CACLC,GAAI,CACFC,MAAsB,SAAfd,EAAwB,QAAU,QACzCe,SAAU,OACVC,WAAY,sBAEdL,UAAU,6BACVM,QAAS,kBAAMb,EAAS,iBAAiB,EAAC,UAEzCc,EAAAA,EAAAA,IAAmB,sBAEtB,SAACN,EAAA,EAAM,CACLC,GAAI,CACFC,MAAsB,SAAfd,EAAwB,QAAU,QACzCe,SAAU,OACVC,WAAY,sBAEdL,UAAU,6BACVM,QAAS,kBAAMb,EAAS,cAAc,EAAC,UAEtCc,EAAAA,EAAAA,IAAmB,uBAEtB,SAACN,EAAA,EAAM,CACLC,GAAI,CACFC,MAAsB,SAAfd,EAAwB,QAAU,QACzCe,SAAU,OACVC,WAAY,sBAEdL,UAAU,6BACVM,QAAS,kBAAMb,EAAS,eAAe,EAAC,UAEvCc,EAAAA,EAAAA,IAAmB,6BAK9B,C","sources":["components/RiveComponents/RiveComponents.tsx","components/BloodsuckerAnimation/BloodsuckerAnimation.tsx","containers/Home/Home.tsx"],"sourcesContent":["import { RiveComponentsProps } from \"./RiveComponents.models\";\nimport Rive, { Alignment, Fit, Layout } from \"@rive-app/react-canvas\";\n\nconst RiveComponents = ({ src, layout, animation }: RiveComponentsProps): JSX.Element => {\n  return <Rive src={src || ''} layout={layout || new Layout({ fit: Fit.Contain, alignment: Alignment.TopCenter })} animations={animation} />;\n};\n\nexport default RiveComponents;\n","import { BloodsuckerAnimationProps } from \"./BloodsuckerAnimation.models\";\nimport { Alignment, Fit, Layout } from \"@rive-app/react-canvas\";\nimport RiveComponents from \"../RiveComponents/RiveComponents\";\nimport BB from \"../../assets/rive/bloodsucker-b.riv\";\nimport BW from \"../../assets/rive/bloodsucker-w.riv\";\n\nconst BloodsuckerAnimation = ({\n  theme,\n}: BloodsuckerAnimationProps): JSX.Element => {\n  return (\n    <>\n      {theme === \"dark\" && (\n        <RiveComponents\n          src={BB}\n          animation=\"Floating\"\n          layout={new Layout({ fit: Fit.Contain, alignment: Alignment.Center })}\n        />\n      )}\n      {theme === \"light\" && (\n        <RiveComponents\n          src={BW}\n          animation=\"Floating\"\n          layout={new Layout({ fit: Fit.Contain, alignment: Alignment.Center })}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BloodsuckerAnimation;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport BloodsuckerAnimation from \"../../components/BloodsuckerAnimation/BloodsuckerAnimation\";\nimport { setIntroDisplayed, setTheme } from \"../../store/sessionSlice/sessionSlice\";\nimport { getTranslatedLabel } from \"../../common/labels/utils\";\nimport { Box, Button, useMediaQuery } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Home.scss\";\n\nconst Home = (): JSX.Element => {\n  const isDarkModeEnabled = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const { theme: themeState, introDisplayed } = useSelector(\n    (state: RootState) => state.session\n  );\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const hideLogoOverlay = () => {\n    setTimeout(() => dispatch(setIntroDisplayed(true)), 2500);\n  };\n\n  useEffect(() => {\n    if (isDarkModeEnabled) {\n      dispatch(setTheme(\"dark\"));\n    } else dispatch(setTheme(\"light\"));\n    hideLogoOverlay();\n  }, []);\n\n  useEffect(() => {\n    if (isDarkModeEnabled) {\n      dispatch(setTheme(\"dark\"));\n    } else dispatch(setTheme(\"light\"));\n  }, [isDarkModeEnabled]);\n\n  return (\n    <Box className=\"home\">\n      {!introDisplayed && (\n        <div className=\"home_overlay\">\n          <div className=\"home_overlay_container\">\n            <div className=\"home_overlay_container_a\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <h3>Alberto</h3>\n          </div>\n        </div>\n      )}\n      <Box className=\"home_container\">\n        <BloodsuckerAnimation theme={themeState} />\n        <Button\n          sx={{\n            color: themeState === \"dark\" ? \"white\" : \"black\",\n            fontSize: \"1rem\",\n            fontFamily: \"Nunito, sans-serif\",\n          }}\n          className=\"home_container_linkTo_upsx\"\n          onClick={() => navigate(\"/about-alberto\")}\n        >\n          {getTranslatedLabel(\"global.aboutAlb\")}\n        </Button>\n        <Button\n          sx={{\n            color: themeState === \"dark\" ? \"white\" : \"black\",\n            fontSize: \"1rem\",\n            fontFamily: \"Nunito, sans-serif\",\n          }}\n          className=\"home_container_linkTo_updx\"\n          onClick={() => navigate(\"/about-code\")}\n        >\n          {getTranslatedLabel(\"global.aboutCode\")}\n        </Button>\n        <Button\n          sx={{\n            color: themeState === \"dark\" ? \"white\" : \"black\",\n            fontSize: \"1rem\",\n            fontFamily: \"Nunito, sans-serif\",\n          }}\n          className=\"home_container_linkTo_dwdx\"\n          onClick={() => navigate(\"/bloodsucker\")}\n        >\n          {getTranslatedLabel(\"global.bloodsucker\")}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Home;\n"],"names":["src","layout","animation","Layout","fit","Fit","alignment","Alignment","animations","theme","BB","BW","isDarkModeEnabled","useMediaQuery","useSelector","state","session","themeState","introDisplayed","dispatch","useDispatch","navigate","useNavigate","useEffect","setTheme","setTimeout","setIntroDisplayed","Box","className","Button","sx","color","fontSize","fontFamily","onClick","getTranslatedLabel"],"sourceRoot":""}