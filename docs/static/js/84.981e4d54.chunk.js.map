{"version":3,"file":"static/js/84.981e4d54.chunk.js","mappings":"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","sources":["components/RiveComponents/RiveComponents.tsx","components/BloodsuckerAnimation/BloodsuckerAnimation.tsx","containers/Home/Home.tsx"],"sourcesContent":["import { RiveComponentsProps } from \"./RiveComponents.models\";\nimport Rive, { Alignment, Fit, Layout } from \"@rive-app/react-canvas\";\n\nconst RiveComponents = ({ src, layout, animation }: RiveComponentsProps): JSX.Element => {\n  return <Rive src={src || ''} layout={layout || new Layout({ fit: Fit.Contain, alignment: Alignment.TopCenter })} animations={animation} />;\n};\n\nexport default RiveComponents;\n","import { BloodsuckerAnimationProps } from \"./BloodsuckerAnimation.models\";\nimport { Alignment, Fit, Layout } from \"@rive-app/react-canvas\";\nimport RiveComponents from \"../RiveComponents/RiveComponents\";\nimport BB from \"../../assets/rive/bloodsucker-b.riv\";\nimport BW from \"../../assets/rive/bloodsucker-w.riv\";\n\nconst BloodsuckerAnimation = ({\n  theme,\n}: BloodsuckerAnimationProps): JSX.Element => {\n  return (\n    <>\n      {theme === \"dark\" && (\n        <RiveComponents\n          src={BB}\n          animation=\"Floating\"\n          layout={new Layout({ fit: Fit.Contain, alignment: Alignment.Center })}\n        />\n      )}\n      {theme === \"light\" && (\n        <RiveComponents\n          src={BW}\n          animation=\"Floating\"\n          layout={new Layout({ fit: Fit.Contain, alignment: Alignment.Center })}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BloodsuckerAnimation;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport BloodsuckerAnimation from \"../../components/BloodsuckerAnimation/BloodsuckerAnimation\";\nimport {\n  setIntroDisplayed,\n  setTheme,\n} from \"../../store/sessionSlice/sessionSlice\";\nimport { getTranslatedLabel } from \"../../common/labels/utils\";\nimport { Box, Button, useMediaQuery } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Home.scss\";\n\nconst Home = (): JSX.Element => {\n  const isDarkModeEnabled = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const { theme: themeState, introDisplayed } = useSelector(\n    (state: RootState) => state.session\n  );\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const hideLogoOverlay = () => {\n    setTimeout(() => dispatch(setIntroDisplayed(true)), 2500);\n  };\n\n  useEffect(() => {\n    if (isDarkModeEnabled) {\n      dispatch(setTheme(\"dark\"));\n    } else dispatch(setTheme(\"light\"));\n    hideLogoOverlay();\n  }, []);\n\n  useEffect(() => {\n    if (isDarkModeEnabled) {\n      dispatch(setTheme(\"dark\"));\n    } else dispatch(setTheme(\"light\"));\n  }, [isDarkModeEnabled]);\n\n  return (\n    <Box className=\"home\" component=\"div\">\n      {!introDisplayed && (\n        <div className=\"home_overlay\">\n          <div className=\"home_overlay_container\">\n            <div className=\"home_overlay_container_a\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <h3>Alberto</h3>\n          </div>\n        </div>\n      )}\n      <Box className=\"home_container\" component=\"div\">\n        <BloodsuckerAnimation theme={themeState} />\n        <Button\n          sx={{\n            color: themeState === \"dark\" ? \"white\" : \"black\",\n            fontSize: \"1rem\",\n            fontFamily: \"Nunito, sans-serif\",\n            \":hover\": { textDecoration: \"underline\", textUnderlineOffset: 3 },\n          }}\n          className=\"home_container_linkTo_upsx\"\n          onClick={() => navigate(\"/about-alberto\")}\n        >\n          {getTranslatedLabel(\"global.aboutAlb\")}\n        </Button>\n        <Button\n          sx={{\n            color: themeState === \"dark\" ? \"white\" : \"black\",\n            fontSize: \"1rem\",\n            fontFamily: \"Nunito, sans-serif\",\n            \":hover\": { textDecoration: \"underline\", textUnderlineOffset: 3 },\n          }}\n          className=\"home_container_linkTo_updx\"\n          onClick={() => navigate(\"/about-code\")}\n        >\n          {getTranslatedLabel(\"global.aboutCode\")}\n        </Button>\n        <Button\n          sx={{\n            color: themeState === \"dark\" ? \"white\" : \"black\",\n            fontSize: \"1rem\",\n            fontFamily: \"Nunito, sans-serif\",\n            \":hover\": { textDecoration: \"underline\", textUnderlineOffset: 3 },\n          }}\n          className=\"home_container_linkTo_dwdx\"\n          onClick={() => navigate(\"/bloodsucker\")}\n        >\n          {getTranslatedLabel(\"global.bloodsucker\")}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","src","layout","animation","_jsx","Rive","Layout","fit","Fit","alignment","Alignment","animations","theme","_jsxs","_Fragment","children","RiveComponents","BB","BW","isDarkModeEnabled","useMediaQuery","_useSelector","useSelector","state","session","themeState","introDisplayed","dispatch","useDispatch","navigate","useNavigate","useEffect","setTheme","setTimeout","setIntroDisplayed","Box","className","component","BloodsuckerAnimation","Button","sx","color","fontSize","fontFamily","textDecoration","textUnderlineOffset","onClick","getTranslatedLabel"],"sourceRoot":""}